srcdir		= @srcdir@
top_srcdir	= @top_srcdir@
top_builddir	= @top_builddir@

subdir		= sources/lib/run-time

VPATH		= $(srcdir)

LIBDEST         = $(OPEN_DYLAN_USER_INSTALL)/lib
INCDEST         = $(OPEN_DYLAN_USER_INSTALL)/include/opendylan

OPEN_DYLAN_TARGET_PLATFORM = @OPEN_DYLAN_TARGET_PLATFORM@
OBJDIR_BASE     = obj-$(OPEN_DYLAN_TARGET_PLATFORM)
OBJDIR_HARP     = $(OBJDIR_BASE)-harp
OBJDIR_LLVM     = $(OBJDIR_BASE)-llvm
OBJDIR_C        = $(OBJDIR_BASE)-c

HARP_RUNTIME_LIBRARY  = $(OBJDIR_HARP)/libdylan-harp-runtime.a
LLVM_RUNTIME_LIBRARY  = $(OBJDIR_LLVM)/libdylan-llvm-runtime.a
C_RUNTIME_LIBRARY     = $(OBJDIR_C)/libdylan-c-runtime.a

.PHONY: install install-c-runtime install-llvm-runtime \
	install-harp-runtime clean

PLATFORM_RUNTIME_LIBRARIES=$(C_RUNTIME_LIBRARY)
PLATFORM_INSTALL_RUNTIMES=install-c-runtime

ifeq ($(OPEN_DYLAN_TARGET_PLATFORM),x86-linux)
  PLATFORM_CFLAGS=-m32 -D_REENTRANT=1 -D_GNU_SOURCE \
    -DOPEN_DYLAN_PLATFORM_LINUX -DOPEN_DYLAN_PLATFORM_UNIX \
    -DOPEN_DYLAN_ARCH_X86
  # Later, this = will become +=
  PLATFORM_RUNTIME_LIBRARIES=$(HARP_RUNTIME_LIBRARY)
  PLATFORM_INSTALL_RUNTIMES=install-harp-runtime
else ifeq ($(OPEN_DYLAN_TARGET_PLATFORM),x86_64-linux)
  PLATFORM_CFLAGS=-m64 -fPIC -D_REENTRANT=1 -D_GNU_SOURCE \
    -DOPEN_DYLAN_PLATFORM_LINUX -DOPEN_DYLAN_PLATFORM_UNIX \
    -DOPEN_DYLAN_ARCH_X86_64
else ifeq ($(OPEN_DYLAN_TARGET_PLATFORM),arm-linux)
  PLATFORM_CFLAGS=-fPIC -D_REENTRANT=1 -D_GNU_SOURCE \
    -DOPEN_DYLAN_PLATFORM_LINUX -DOPEN_DYLAN_PLATFORM_UNIX \
    -DOPEN_DYLAN_ARCH_ARM
else ifeq ($(OPEN_DYLAN_TARGET_PLATFORM),x86-freebsd)
  PLATFORM_CFLAGS=-m32 -D_REENTRANT=1 \
    -DOPEN_DYLAN_PLATFORM_FREEBSD -DOPEN_DYLAN_PLATFORM_UNIX \
    -DOPEN_DYLAN_ARCH_X86
  # Later, this = will become +=
  PLATFORM_RUNTIME_LIBRARIES=$(HARP_RUNTIME_LIBRARY)
  PLATFORM_INSTALL_RUNTIMES=install-harp-runtime
else ifeq ($(OPEN_DYLAN_TARGET_PLATFORM),x86_64-freebsd)
  PLATFORM_CFLAGS=-m64 -fPIC -D_REENTRANT=1 \
    -DOPEN_DYLAN_PLATFORM_FREEBSD -DOPEN_DYLAN_PLATFORM_UNIX \
    -DOPEN_DYLAN_ARCH_X86_64
else ifeq ($(OPEN_DYLAN_TARGET_PLATFORM),x86-darwin)
  PLATFORM_CFLAGS=-arch i386 -D_REENTRANT=1 \
    -DOPEN_DYLAN_PLATFORM_DARWIN -DOPEN_DYLAN_PLATFORM_UNIX \
    -DOPEN_DYLAN_ARCH_X86
else ifeq ($(OPEN_DYLAN_TARGET_PLATFORM),x86_64-darwin)
  PLATFORM_CFLAGS=-arch x86_64 -D_REENTRANT=1 \
    -DOPEN_DYLAN_PLATFORM_DARWIN -DOPEN_DYLAN_PLATFORM_UNIX \
    -DOPEN_DYLAN_ARCH_X86_64
endif

GC_CFLAGS       = @GC_CFLAGS@
GC_CHOICE       = @GC_CHOICE@
GC_LIBRARY      = @GC_LIBRARY@
GC_USE_STATIC_BOEHM = @GC_USE_STATIC_BOEHM@

CC = @CC@
AR = ar -rcs

CFLAGS		= $(PLATFORM_CFLAGS) -Wall -O -g $(GC_CFLAGS) -I$(srcdir)

LLVM_CFLAGS     = -DOPEN_DYLAN_BACKEND_LLVM

HARP_SUPPORT_DIR = $(srcdir)/harp-support/$(OPEN_DYLAN_TARGET_PLATFORM)
HARP_RUNTIME_OBJS = \
		  $(OBJDIR_HARP)/break.o \
		  $(OBJDIR_HARP)/collector.o \
		  $(OBJDIR_HARP)/debug-print.o \
		  $(OBJDIR_HARP)/trace.o \
		  $(OBJDIR_HARP)/unix-spy-interfaces.o \
		  $(OBJDIR_HARP)/unix-support.o \
		  $(OBJDIR_HARP)/unix-threads-primitives.o \
		  $(HARP_SUPPORT_DIR)/runtime.o

ifeq ($(GC_CHOICE),mps)
  HARP_RUNTIME_OBJS += \
		  $(OBJDIR_HARP)/mps-dylan.o \
		  $(OBJDIR_HARP)/heap-display.o \
		  $(OBJDIR_HARP)/heap-utils.o \
		  $(OBJDIR_HARP)/heap-trail.o \
		  $(OBJDIR_HARP)/heap-order1.o \
		  $(OBJDIR_HARP)/heap-order2.o \
		  $(OBJDIR_HARP)/heap-table.o
endif

LLVM_RUNTIME_OBJS =

C_RUNTIME_OBJS	= $(OBJDIR_C)/break.o \
		  $(OBJDIR_C)/collector.o \
		  $(OBJDIR_C)/debug-print.o \
		  $(OBJDIR_C)/trace.o \
		  $(OBJDIR_C)/unix-spy-interfaces.o \
		  $(OBJDIR_C)/unix-support.o \
		  $(OBJDIR_C)/c-run-time.o \
		  $(OBJDIR_C)/c-support.o \
		  $(OBJDIR_C)/c-primitives-debug.o \
		  $(OBJDIR_C)/c-primitives-math.o \
		  $(OBJDIR_C)/c-run-time-nlx.o \
		  $(OBJDIR_C)/posix-threads.o

HARP_RUNTIME_LIBDEST  = $(LIBDEST)/runtime/harp-$(OPEN_DYLAN_TARGET_PLATFORM)
LLVM_RUNTIME_LIBDEST  = $(LIBDEST)/runtime/llvm-$(OPEN_DYLAN_TARGET_PLATFORM)
C_RUNTIME_LIBDEST     = $(LIBDEST)/runtime/c-$(OPEN_DYLAN_TARGET_PLATFORM)

all: $(PLATFORM_RUNTIME_LIBRARIES)

$(HARP_RUNTIME_LIBDEST):
	mkdir -p $(HARP_RUNTIME_LIBDEST)

$(LLVM_RUNTIME_LIBDEST):
	mkdir -p $(LLVM_RUNTIME_LIBDEST)

$(C_RUNTIME_LIBDEST):
	mkdir -p $(C_RUNTIME_LIBDEST)

$(OBJDIR_HARP)/%.o: $(srcdir)/%.c
	mkdir -p $(OBJDIR_HARP)
	$(CC) $(CFLAGS) -MMD -c -o $@ $<

$(OBJDIR_LLVM)/%.o: $(srcdir)/%.c
	mkdir -p $(OBJDIR_HARP)
	$(CC) $(CFLAGS) $(LLVM_CFLAGS) -MMD -c -o $@ $<

$(OBJDIR_LLVM)/%.o: %.bc
	mkdir -p $(OBJDIR_LLVM)
	$(CC) $(CFLAGS) $(LLVM_CFLAGS) -MMD -c -o $@ $<

$(OBJDIR_C)/%.o: $(srcdir)/%.c
	mkdir -p $(OBJDIR_C)
	$(CC) $(CFLAGS) -MMD -c -o $@ $<

$(HARP_RUNTIME_LIBRARY): $(HARP_RUNTIME_OBJS)
	$(AR) $(HARP_RUNTIME_LIBRARY) $(HARP_RUNTIME_OBJS)

install-harp-runtime: $(HARP_RUNTIME_LIBRARY) $(HARP_RUNTIME_LIBDEST)
	cp -fp $(HARP_RUNTIME_LIBRARY) $(HARP_RUNTIME_LIBDEST)
	cp -fp $(HARP_SUPPORT_DIR)/dylan-support.o $(HARP_RUNTIME_LIBDEST)
	cp -fp $(HARP_SUPPORT_DIR)/dylan-elf-dll.script $(LIBDEST)
	cp -fp $(HARP_SUPPORT_DIR)/dylan-elf-exe.script $(LIBDEST)

$(LLVM_RUNTIME_LIBRARY): $(LLVM_RUNTIME_OBJS)
	$(AR) $(LLVM_RUNTIME_LIBRARY) $(LLVM_RUNTIME_OBJS)

install-llvm-runtime: $(LLVM_RUNTIME_LIBRARY) $(LLVM_RUNTIME_LIBDEST)
	cp -fp $(LLVM_RUNTIME_LIBRARY) $(LLVM_RUNTIME_LIBDEST)
	@ if [ "$(GC_USE_STATIC_BOEHM)" = "true" ]; then \
	    cp -fp $(GC_LIBRARY) $(LLVM_RUNTIME_LIBDEST); \
	fi

$(C_RUNTIME_LIBRARY): $(C_RUNTIME_OBJS)
	$(AR) $(C_RUNTIME_LIBRARY) $(C_RUNTIME_OBJS)

$(INCDEST):
	mkdir -p $(INCDEST)

install-c-runtime: $(C_RUNTIME_LIBRARY) $(C_RUNTIME_LIBDEST) $(INCDEST)
	cp -fp $(C_RUNTIME_LIBRARY) $(C_RUNTIME_LIBDEST)
	cp -fp $(srcdir)/trace.h $(INCDEST)
	cp -fp $(srcdir)/run-time.h $(INCDEST)
	@ if [ "$(GC_USE_STATIC_BOEHM)" = "true" ]; then \
	    cp -fp $(GC_LIBRARY) $(C_RUNTIME_LIBDEST); \
	fi


install: $(PLATFORM_INSTALL_RUNTIMES)

clean:
	rm -rf $(OBJDIR_HARP) $(OBJDIR_LLVM) $(OBJDIR_C)

Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	cd $(top_builddir) && ./config.status $(subdir)/Makefile

-include $(HARP_RUNTIME_OBJS:%.o=%.d)
-include $(LLVM_RUNTIME_OBJS:%.o=%.d)
-include $(C_RUNTIME_OBJS:%.o=%.d)
